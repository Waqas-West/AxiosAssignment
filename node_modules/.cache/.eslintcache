[{"D:\\weatherappaxios\\src\\index.js":"1","D:\\weatherappaxios\\src\\App.js":"2","D:\\weatherappaxios\\src\\components\\Functional.jsx":"3","D:\\weatherappaxios\\src\\components\\WeatherLocations.jsx":"4","D:\\weatherappaxios\\src\\components\\Navbar.jsx":"5","D:\\weatherappaxios\\src\\components\\SearchBar.jsx":"6","D:\\weatherappaxios\\src\\components\\Card.jsx":"7"},{"size":172,"mtime":1705662992902,"results":"8","hashOfConfig":"9"},{"size":474,"mtime":1705662992867,"results":"10","hashOfConfig":"9"},{"size":1488,"mtime":1705662992997,"results":"11","hashOfConfig":"9"},{"size":1690,"mtime":1705662993196,"results":"12","hashOfConfig":"9"},{"size":837,"mtime":1705662993100,"results":"13","hashOfConfig":"9"},{"size":1380,"mtime":1705662993146,"results":"14","hashOfConfig":"9"},{"size":6973,"mtime":1705662992945,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ekxqtf",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"D:\\weatherappaxios\\src\\index.js",[],[],"D:\\weatherappaxios\\src\\App.js",[],[],"D:\\weatherappaxios\\src\\components\\Functional.jsx",["39"],[],"import React, { useEffect, useState } from 'react'\r\nimport SearchBar from './SearchBar';\r\nimport Navbar from \"./Navbar\";\r\nimport '../App.css';\r\n\r\nconst Functional = () => {\r\n    const [value, getValue] = useState('');\r\n    const [data, getData] = useState('');\r\n    const [btnValue, getBtnValue] = useState(value)\r\n    // const noida = \"noida\"\r\n    const fetch_func = async () => {\r\n        const api = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${btnValue}&appid=bb7c4ad32a38811f7814ed5ae3f70e43`);\r\n        const get_api = await api.json();\r\n        const { temp, feels_like, temp_min, temp_max, humidity, pressure } = get_api.main;\r\n        const { visibility } = get_api;\r\n        const { speed } = get_api.wind;\r\n        const { main, description, icon } = get_api.weather[0];\r\n        const { all } = get_api.clouds;\r\n        const { sunrise, sunset } = get_api.sys;\r\n        const { name } = get_api;\r\n        const allData = {\r\n            temp, feels_like, main, description, icon, temp_min, temp_max, humidity, pressure, visibility, speed, all, sunrise, sunset, name\r\n        }\r\n        getData(allData)\r\n    }\r\n    useEffect(() => {\r\n        fetch_func()\r\n    }, [btnValue]);\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            < SearchBar\r\n                value={value}\r\n                getValue={getValue}\r\n                getBtnValue={getBtnValue}\r\n                data={data}\r\n            />\r\n        </>\r\n    )\r\n}\r\nexport default Functional;","D:\\weatherappaxios\\src\\components\\WeatherLocations.jsx",[],[],"D:\\weatherappaxios\\src\\components\\Navbar.jsx",[],[],"D:\\weatherappaxios\\src\\components\\SearchBar.jsx",[],[],"D:\\weatherappaxios\\src\\components\\Card.jsx",["40","41","42","43","44","45","46","47","48"],[],"import wind from \"../images/wind.png\";\r\nimport humidity from \"../images/humidity.png\";\r\nimport clouds from \"../images/clouds.png\";\r\nimport minimum from \"../images/minimum.png\";\r\nimport maximum from \"../images/maximum.png\";\r\nimport pressure from \"../images/pressure.png\";\r\nimport sunrise from \"../images/sunrise.png\";\r\nimport sunset from \"../images/sunset.png\";\r\nimport visibility from \"../images/visibility.png\";\r\nimport '../App.css';\r\n\r\n\r\nconst Card = ({ data }) => {\r\n    return (\r\n        <>\r\n            {!data ? <p></p> : (\r\n                <div className=\"container\">\r\n                    <div className=\"card mbName-3 bg-transparent bg\">\r\n                        <div className=\"card-body text-center mt-2 flex-class\">\r\n                            <div className=\"first\">\r\n                                <h1 className=\"fw-bolder\">{(data.temp - 273.15).toFixed(2)}˚C</h1>\r\n                                <p className=\"card-title\">Feels like {(data.feels_like - 273.15).toFixed(2)}˚C</p>\r\n                            </div>\r\n                            <div className=\"second\">\r\n                                <img src={`https://openweathermap.org/img/wn/${data.icon}@4x.png`} className=\"img-fluid rounded mx-auto d-block\" alt=\"icon\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body text-center mb-5\">\r\n                            <p className=\"card-title\">{data.description.toUpperCase()}</p>\r\n                            <h1 className=\"card-text fw-bolder\">{data.name}</h1>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container d-flex justify-content-center flex-wrap\">\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={minimum} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"minimum temperature\".toUpperCase()}</p>\r\n                                <a className=\"btn min-col \">{(data.temp_min - 273.15).toFixed(2)}˚C</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={maximum} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"maximum temperature\".toUpperCase()}</p>\r\n                                <a className=\"btn max-col \">{(data.temp_max - 273.15).toFixed(2)}˚C</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={wind} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"wind speed\".toUpperCase()}</p>\r\n                                <a className=\"btn wind-col\">{data.speed} m/s</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={sunrise} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"Sunrise\".toUpperCase()}</p>\r\n                                <a className=\"btn min-col \">{`${new Date(data.sunrise * 1000).getHours()}:${new Date(data.sunrise * 1000).getMinutes()}:${new Date(data.sunrise * 1000).getSeconds()} AM`}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={sunset} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"Sunset\".toUpperCase()}</p>\r\n                                <a className=\"btn min-col \">{`${new Date(data.sunset * 1000).getHours()}:${new Date(data.sunset * 1000).getMinutes()}:${new Date(data.sunset * 1000).getSeconds()} PM`}</a>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={humidity} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"humidity\".toUpperCase()}</p>\r\n                                <a className=\"btn humidity-col \">{data.humidity}%</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={clouds} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"clouds\".toUpperCase()}</p>\r\n                                <a className=\"btn cloud-col \">{data.all}%</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={pressure} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"Air pressure\".toUpperCase()}</p>\r\n                                <a className=\"btn pres-col \">{data.pressure} hPa</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card text-center mb-3 m-1 bg-group\" style={{ width: \"18rem\" }}>\r\n                            <div className=\"card-body\">\r\n                                <img src={visibility} className=\"img-fluid rounded mx-auto d-block image-size mt-3 mb-3\" alt=\"icon\" />\r\n                                <p className=\"card-text\">{\"visibility\".toUpperCase()}</p>\r\n                                <a className=\"btn vis-col \">{data.visibility / 1000} KM</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\nexport default Card;\r\n\r\n",{"ruleId":"49","severity":1,"message":"50","line":28,"column":8,"nodeType":"51","endLine":28,"endColumn":18,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":38,"column":33,"nodeType":"55","endLine":38,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":45,"column":33,"nodeType":"55","endLine":45,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":52,"column":33,"nodeType":"55","endLine":52,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":60,"column":33,"nodeType":"55","endLine":60,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":67,"column":33,"nodeType":"55","endLine":67,"endColumn":61},{"ruleId":"53","severity":1,"message":"54","line":75,"column":33,"nodeType":"55","endLine":75,"endColumn":66},{"ruleId":"53","severity":1,"message":"54","line":82,"column":33,"nodeType":"55","endLine":82,"endColumn":63},{"ruleId":"53","severity":1,"message":"54","line":89,"column":33,"nodeType":"55","endLine":89,"endColumn":62},{"ruleId":"53","severity":1,"message":"54","line":96,"column":33,"nodeType":"55","endLine":96,"endColumn":61},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch_func'. Either include it or remove the dependency array.","ArrayExpression",["56"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"57","fix":"58"},"Update the dependencies array to be: [btnValue, fetch_func]",{"range":"59","text":"60"},[1194,1204],"[btnValue, fetch_func]"]