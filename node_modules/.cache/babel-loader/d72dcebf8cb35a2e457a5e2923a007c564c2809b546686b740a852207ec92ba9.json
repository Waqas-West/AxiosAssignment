{"ast":null,"code":"var _jsxFileName = \"D:\\\\weatherappaxios\\\\src\\\\components\\\\WeatherLocations.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Card from \"./Card\";\nimport axios from \"axios\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst option = {\n  method: \"GET\",\n  contentType: 'application/json'\n};\nconst WeatherLocations = () => {\n  _s();\n  const [lati, getLati] = useState();\n  const [longi, getLongi] = useState();\n  const [data, getData] = useState();\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      getLati(position.coords.latitude);\n      getLongi(position.coords.longitude);\n    });\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lati}&lon=${longi}&appid=bb7c4ad32a38811f7814ed5ae3f70e43`, option).then(res => {\n      const {\n        temp,\n        feels_like,\n        temp_min,\n        temp_max,\n        humidity,\n        pressure\n      } = res.data.main;\n      const {\n        visibility\n      } = res.data;\n      const {\n        speed\n      } = res.data.wind;\n      const {\n        main,\n        description,\n        icon\n      } = res.data.weather[0];\n      const {\n        all\n      } = res.data.clouds;\n      const {\n        sunrise,\n        sunset\n      } = res.data.sys;\n      const {\n        name\n      } = res.data;\n      const AllData = {\n        temp,\n        feels_like,\n        main,\n        description,\n        icon,\n        temp_min,\n        temp_max,\n        humidity,\n        pressure,\n        visibility,\n        speed,\n        all,\n        sunrise,\n        sunset,\n        name\n      };\n      getData(AllData);\n    }).catch(error => {\n      console.log(error.name);\n    });\n  }, [lati, longi]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(WeatherLocations, \"Q8W9ZWxFIncJG4PYGSYNXtvd8Oc=\");\n_c = WeatherLocations;\nexport default WeatherLocations;\nvar _c;\n$RefreshReg$(_c, \"WeatherLocations\");","map":{"version":3,"names":["useEffect","useState","Navbar","Card","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","option","method","contentType","WeatherLocations","_s","lati","getLati","longi","getLongi","data","getData","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","get","then","res","temp","feels_like","temp_min","temp_max","humidity","pressure","main","visibility","speed","wind","description","icon","weather","all","clouds","sunrise","sunset","sys","name","AllData","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/weatherappaxios/src/components/WeatherLocations.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport Card from \"./Card\";\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\n\r\n\r\nconst option = {\r\n    method: \"GET\",\r\n    contentType: 'application/json'\r\n};\r\nconst WeatherLocations = () => {\r\n    const [lati, getLati] = useState()\r\n    const [longi, getLongi] = useState()\r\n    const [data, getData] = useState();\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n            getLati(position.coords.latitude)\r\n            getLongi(position.coords.longitude)\r\n        })\r\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lati}&lon=${longi}&appid=bb7c4ad32a38811f7814ed5ae3f70e43`, option)\r\n            .then((res) => {\r\n                const { temp, feels_like, temp_min, temp_max, humidity, pressure } = res.data.main;\r\n                const { visibility } = res.data;\r\n                const { speed } = res.data.wind;\r\n                const { main, description, icon } = res.data.weather[0];\r\n                const { all } = res.data.clouds;\r\n                const { sunrise, sunset } = res.data.sys;\r\n                const { name } = res.data;\r\n                const AllData = {\r\n                    temp, feels_like, main, description, icon, temp_min, temp_max, humidity, pressure, visibility, speed, all, sunrise, sunset, name\r\n                }\r\n                getData(AllData)\r\n            }).catch((error) => {\r\n                console.log(error.name);\r\n            })\r\n\r\n    }, [lati, longi])\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Card data={data} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WeatherLocations;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}